service: serverless-test
# frameworkVersion: "2"
useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  lambdaHashingVersion: '20201221'
  region: ap-southeast-2
  timeout: 900
  apiGateway:
    apiKeys:
      - 'weather-api-key'
  environment:
    ALLOWS_INSECURE_SSL_CERTIFICATES: true


plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  serverless-offline:
    httpsProtocol: ${env:DEV_CERTS, false}
    httpPort: 4000
    apiKey: ${env:API_KEY}

# resources:
#   Resources:
#     GatewayResponse:
#       Type: 'AWS::ApiGateway::GatewayResponse'
#       Properties:
#         ResponseParameters:
#           gatewayresponse.header.WWW-Authenticate: "'Basic'"
#         ResponseType: UNAUTHORIZED
#         RestApiId:
#           Ref: 'ApiGatewayRestApi'
#         StatusCode: '401'

functions:
  weatherApi:
    handler: src/handlers/weather.handler
    description: return weather by given postcode and country code
    events:
      - http:
          path: weather
          method: get
          cors: true # <-- CORS!
          private: true
  #         authorizer:
  #           name: authorizer
  #           resultTtlInSeconds: 0
  #           identitySource: method.request.header.Authorization
  #           type: request
  # authorizer:
  #   handler: src/handlers/basicAuth.handler
